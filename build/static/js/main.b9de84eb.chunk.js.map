{"version":3,"sources":["Components/SinglePost.js","Components/Search.js","Components/Posts.js","Components/AccountForm.js","Components/Home.js","Components/NewPost.js","Components/Messages.js","Components/App.js","Components/MessageForm.js","Components/Postview.js","Components/EditPost.js","index.js"],"names":["SinglePost","children","post","user","token","fetchPosts","console","log","className","title","description","price","location","author","username","Search","posts","setPosts","useState","query","setQuery","isTitle","handleFilter","a","filteredPosts","filter","toLowerCase","includes","onChange","name","type","placeholder","value","e","target","Posts","handleDelete","postId","fetch","method","headers","Authorization","map","_id","onClick","to","baseURL","AccountForm","setToken","setUser","setUsername","password","setPassword","history","useHistory","params","useParams","onSubmit","event","preventDefault","body","JSON","stringify","resp","json","respObj","data","fetchUser","result","push","Title","styled","h1","Home","NewPost","setTitle","setDescription","setPrice","setLocation","willDeliver","setWillDeliver","then","response","catch","error","Messages","userMessages","messages","message","fromUser","content","App","login","setLogin","useEffect","props","id","exact","path","MessageForm","setContent","handleSubmit","ev","disabled","PostView","find","EditPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9de84eb.chunk.js","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router';\n\n\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\nconst SinglePost = ({children, post, user, token, fetchPosts}) => {\n    console.log('user', user)\n    console.log('post', post)\n    console.log('token', token)\n    \n    return post \n        ? <div className=\"some\">\n            \n            <h3>Title: {post.title}</h3>\n            <h5>Description: {post.description}</h5>\n            <h5>Price: {post.price}</h5>\n            <h5>Location: {post.location}</h5>\n            <h5>Author: {post.author.username}</h5>\n            \n\n            <div>{post.description}</div>\n            <span> \n                {\n                    children\n                }\n        \n            </span>\n          </div>\n      : \"loading...\"\n}\n\nexport default SinglePost;\n\n\n","import React, { useState } from 'react';\nimport SinglePost from './SinglePost';\n\nconst Search = ({fetchPosts, posts, setPosts}) => {\n\n    const [query, setQuery] = useState('')\n    const [isTitle, setIsTitle] = useState(true);\n    \n    const handleFilter = async () => {\n        let filteredPosts\n        isTitle \n            ? filteredPosts = posts.filter(post => post.title.toLowerCase().includes( query.toLowerCase() ))\n            : filteredPosts = posts.filter(post => post.description.toLowerCase().includes( query.toLowerCase() ))\n        setPosts(filteredPosts);\n        query === '' && await fetchPosts();\n    }\n\n    return <form className='search-form' onChange={handleFilter}>\n        <input name='search' type='text' placeholder='FILTER POSTS' className='search-input' value={query} onChange={(e)=> setQuery(e.target.value)} />       \n        <button type='submit'className='search-button' >reset</button>\n        <div></div>\n    </form>\n}\n\nexport default Search;","import React, { useEffect, useState } from \"react\";\nimport SinglePost from \"./SinglePost\";\nimport Search from \"./Search\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\n\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst Posts = ({ user, token, posts, fetchPosts,setPosts }) => {\n  const handleDelete = async (postId) => {\n    const respObj = await fetch(`${baseURL}/posts/${postId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    await fetchPosts();\n  };\n\n  return (\n    <>\n\n    <Search posts={posts} setPosts={setPosts} fetchPosts={fetchPosts} />\n  {posts.map((post) => (\n        <SinglePost\n          key={post._id}\n          post={post}\n          user={user}\n          token={token}\n          fetchPosts={fetchPosts}\n        >\n          {user._id === post.author._id ? (\n            <button onClick={() => handleDelete(post._id)}>Delete</button>\n          ) : (\n            \"\"\n          )}\n          {post && <Link to={`/posts/${post._id}`}> View Post </Link>}\n          \n\n          {(user._id === post.author._id) ?\n            post && <Link to={`/edit/${post._id}`}> Edit Post </Link>\n          : \"\"\n          }\n\n\n        </SinglePost>\n      ))}\n    </>\n  );\n};\n\nexport default Posts;\n","import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst AccountForm = ({ setToken, setUser }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  return (\n    <>\n      <div>This is the {params.method} method</div>\n      <form\n      \n        onSubmit={async (event) => {\n          event.preventDefault();\n          const resp = await fetch(`${baseURL}/users/${params.method}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              user: {\n                username,\n                password,\n              },\n            }),\n          });\n          const respObj = await resp.json();\n          try {\n          setToken(respObj.data.token);\n\n          if (respObj.data) {\n            const fetchUser = await fetch(`${baseURL}/users/me`, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${respObj.data.token}`,\n              },\n            });\n            const result = await fetchUser.json();\n            const data = result;\n            if (data.data) {\n              setUser(data.data);\n            }\n\n            history.push(\"/\");\n          }\n        \n        }  catch (error){ \n        console.log(\"= CLEAN UP THIS ERROR MESSAGE \")\n      }\n      \n      }}\n\n      >\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <Link to=\"/account/register\">Click here to Register</Link>\n    </>\n  );\n};\n\nexport default AccountForm;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h1`\n  font-size: 2em;\n  text-align: center;\n  color: gray;\n`;\n\nconst Home = ({ user, token }) => {\n  return (\n    <>\n      <Title>\n        Stranger's Things\n        <br />\n        <br />\n        {token ? (\n          <span>You are logged in as {user.username}</span>\n        ) : (\n          \"Hi friend (:\"\n        )}\n      </Title>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst NewPost = ({ token, fetchPosts }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n  const history = useHistory();\n  return (\n    <>\n      <h1>Create Post</h1>\n\n      <form\n        onSubmit={async (event) => {\n          event.preventDefault();\n\n          await fetch(`${baseURL}/posts`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n              post: {\n                title,\n                description,\n                price,\n                location,\n                willDeliver,\n              },\n            }),\n          })\n            .then((response) => response.json())\n            .then((result) => {})\n            .catch(console.error);\n          await fetchPosts();\n          history.push(\"./posts\");\n        }}\n      >\n        <fieldset>\n          <label>Title</label>\n          <input\n            type=\"text\"\n            placeholder=\"title\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n          ></input>\n        </fieldset>\n\n        <fieldset>\n          <label>description</label>\n          <input\n            type=\"text\"\n            placeholder=\"description\"\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n          ></input>\n        </fieldset>\n\n        <fieldset>\n          <label>price</label>\n          <input\n            type=\"text\"\n            placeholder=\"price\"\n            value={price}\n            onChange={(event) => setPrice(event.target.value)}\n          ></input>\n        </fieldset>\n\n        <fieldset>\n          <label>location</label>\n          <input\n            type=\"text\"\n            placeholder=\"location\"\n            value={location}\n            onChange={(event) => setLocation(event.target.value)}\n          ></input>\n        </fieldset>\n\n        <fieldset>\n          <label>willDeliver</label>\n          <select\n            type=\"text\"\n            placeholder=\"no/yes\"\n            value={willDeliver}\n            onChange={(event) => setWillDeliver(event.target.value)}\n          >\n            <option value=\"false\">no</option>\n            <option value=\"true\">yes</option>\n          </select>\n        </fieldset>\n        <button type=\"submit\">Post</button>\n      </form>\n    </>\n  );\n};\n\nexport default NewPost;\n","import React, { useState } from \"react\";\n\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst Messages = ({ user, token }) => {\n  const userMessages = user.messages;\n  console.log(userMessages);\n  return (\n    <div className=\"content\">\n      <h1>Genshin</h1>\n      {\n      \n        userMessages?.map((message) => {\n          return (\n            <div className=\"some\">\n              <br />\n              <h3>Message:{message.fromUser.username}</h3>\n\n              <h3>{message.content}</h3>\n\n              <br />\n              <span>{message.post.title}</span>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n};\n\nexport default Messages;\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter,\n  Link,\n} from \"react-router-dom\";\nimport {\n  Posts,\n  AccountForm,\n  Home,\n  NewPost,\n  Messages,\n  PostView,\n  EditPost,\n  Search\n} from \"./\";\n\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst App = () => {\n  const [token, setToken] = useState(\"\");\n  const [login, setLogin] = useState(false);\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n \n\n \n\n  const fetchPosts = async () => {\n    const resp = await fetch(`${baseURL}/posts`);\n    const data = await resp.json();\n\n    setPosts(data.data.posts);\n  };\n\n  useEffect(async () => {\n    await fetchPosts();\n  }, [token]);\n\n  const props = {\n    token,\n    setToken,\n    login,\n    setLogin,\n    user,\n    setUser,\n    posts,\n    setPosts,\n    fetchPosts,\n  };\n\n  return (\n    <div id=\"content\">\n      <center>\n      <Link to=\"/\">Home</Link> | <Link to=\"/newpost\">New Post</Link> |{\" \"}\n      <Link to=\"/posts\">Posts</Link> |{\" \"}\n      {token ? null :<Link to=\"/account/register\">Register</Link> }\n      {\" \"} {\" \"}\n      {token ? <Link to=\"/profile\">Profile</Link> : null }\n      {token ? (\n        <button\n          onClick={() => {\n            setToken(\"\");\n            setLogin(false);\n          }}\n        >\n          Log out\n        </button>\n      ) : (\n        <Link to=\"/account/login\">Login</Link>\n      )}\n      <Route exact path=\"/\">\n        <Home {...props} />\n      </Route>\n      <Route exact path=\"/posts\">\n        <Posts {...props} />\n      </Route>\n      <Route exact path=\"/account/:method\">\n        <AccountForm {...props} />\n      </Route>\n      <Route path=\"/newpost\">\n        <NewPost {...props} />\n      </Route>\n      <Route path=\"/profile\">\n        <Messages {...props} />\n      </Route>\n      <Route exact path=\"/posts/:postId\">\n        <PostView {...props} />\n      </Route>\n      <Route exact path=\"/edit/:postId\">\n        <EditPost {...props} />\n      </Route>\n      </center>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst MessageForm = ({ posts, token, fetchPosts, post }) => {\n  const [content, setContent] = useState(\"\");\n  const history = useHistory();\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    await fetch(`${baseURL}/posts/${post._id}/messages`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        message: {\n          content,\n        },\n      }),\n    })\n      .then((response) => response.json())\n      .then((result) => {})\n      .catch(console.error);\n    history.push(\"./\");\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={content}\n          placeholder=\"write a message\"\n          onChange={(event) => setContent(event.target.value)}\n        ></input>\n        <button type=\"submit\" disabled={!content}>\n          Send\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default MessageForm;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport SinglePost from './SinglePost'\nimport MessageForm  from \"./MessageForm\";\n\n\nconst PostView = ({posts, user, token} ) => {\n    const {postId} = useParams()\n    console.log(posts)\n    const post = posts.find(post => post._id === postId) \n    console.log(post)\n    return <>\n        <SinglePost post={post}> \n          {user._id !== post.author._id ? <MessageForm post={post} token={token} user={user} /> : null} \n        </SinglePost>\n    </>\n}\n\n\nexport default PostView;","import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\nimport SinglePost from \"./SinglePost\";\n\nconst EditPost = ({ token, setPosts, posts, fetchPosts }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n  const history = useHistory();\n  const { postId } = useParams();\n\n  const post = posts.find((post) => post._id === postId);\n  return (\n    <>\n      <h1>Edit Post</h1>\n      <SinglePost post={post}></SinglePost>\n      <form\n        onSubmit={async (event) => {\n          event.preventDefault();\n\n          await fetch(`${baseURL}/posts/${postId}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n              post: {\n                title,\n                description,\n                price,\n                location,\n                willDeliver,\n              },\n            }),\n          })\n            .then((response) => response.json())\n            .then((result) => {})\n            .catch(console.error);\n\n          await fetchPosts();\n          history.push(\"/posts\");\n        }}\n      >\n        <fieldset>\n          <label>Title</label>\n          <input\n            type=\"text\"\n            placeholder={`${post.title}`}\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n          ></input>\n        </fieldset>\n\n        <fieldset>\n          <label>description</label>\n          <input\n            type=\"text\"\n            placeholder={`${post.description}`}\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n          ></input>\n        </fieldset>\n\n        <fieldset>\n          <label>price</label>\n          <input\n            type=\"text\"\n            placeholder={`${post.price}`}\n            value={price}\n            onChange={(event) => setPrice(event.target.value)}\n          ></input>\n        </fieldset>\n\n        <fieldset>\n          <label>location</label>\n          <input\n            type=\"text\"\n            placeholder={`${post.location}`}\n            value={location}\n            onChange={(event) => setLocation(event.target.value)}\n          ></input>\n        </fieldset>\n\n        <fieldset>\n          <label>willDeliver</label>\n          <select\n            type=\"text\"\n            placeholder={`${post.willDeliver}`}\n            value={willDeliver}\n            onChange={(event) => setWillDeliver(event.target.value)}\n          >\n            <option value=\"false\">no</option>\n            <option value=\"true\">yes</option>\n          </select>\n        </fieldset>\n        <button type=\"submit\">Post</button>\n      </form>\n    </>\n  );\n};\n\nexport default EditPost;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter as  Router } from \"react-router-dom\";\nimport { App } from \"./Components\"\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"app\")\n);\n\n"],"sourceRoot":""}