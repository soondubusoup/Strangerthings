{"ast":null,"code":"var _jsxFileName = \"/Users/soondubu/Desktop/Strangerthings/src/Components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst AccountForm = ({\n  setToken,\n  setUser\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"This is the \", params.method, \" method\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        const resp = await fetch(`${baseURL}/users/${params.method}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user: {\n              username,\n              password\n            }\n          })\n        });\n        console.log(resp); // ONLY IF YOU WANT THIS TO LOOK AT THE RESP (BUT PROBABLY SHOULDNT??)\n\n        const respObj = await resp.json();\n\n        try {\n          setToken(respObj.data.token);\n\n          if (respObj.data) {\n            const fetchUser = await fetch(`${baseURL}/users/me`, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${respObj.data.token}`\n              }\n            });\n            const result = await fetchUser.json();\n            const data = result;\n\n            if (data.data) {\n              setUser(data.data);\n            }\n\n            history.push(\"/\");\n          }\n        } catch (error) {\n          console.log(\"= CLEAN UP THIS ERROR MESSAGE \");\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/account/register\",\n      children: \"Click here to Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"AEtg9p1rZ4LOgwzmOrXmzaQ64SQ=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/soondubu/Desktop/Strangerthings/src/Components/AccountForm.js"],"names":["React","useState","useParams","useHistory","Link","baseURL","AccountForm","setToken","setUser","username","setUsername","password","setPassword","history","params","method","event","preventDefault","resp","fetch","headers","body","JSON","stringify","user","console","log","respObj","json","data","token","fetchUser","Authorization","result","push","error","target","value"],"mappings":"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","sourcesContent":["\n\n\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst AccountForm = ({ setToken, setUser }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = useHistory();\n  const params = useParams();\n\n  return (\n    <>\n      <div>This is the {params.method} method</div>\n      <form\n      \n        onSubmit={async (event) => {\n          event.preventDefault();\n          const resp = await fetch(`${baseURL}/users/${params.method}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              user: {\n                username,\n                password,\n              },\n            }),\n          });\n          console.log(resp) // ONLY IF YOU WANT THIS TO LOOK AT THE RESP (BUT PROBABLY SHOULDNT??)\n          const respObj = await resp.json();\n          try {\n          setToken(respObj.data.token);\n\n          if (respObj.data) {\n            const fetchUser = await fetch(`${baseURL}/users/me`, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${respObj.data.token}`,\n              },\n            });\n            const result = await fetchUser.json();\n            const data = result;\n            if (data.data) {\n              setUser(data.data);\n            }\n\n            history.push(\"/\");\n          }\n        \n        }  catch (error){ \n        console.log(\"= CLEAN UP THIS ERROR MESSAGE \")\n      }\n      \n      }}\n\n      >\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <Link to=\"/account/register\">Click here to Register</Link>\n    </>\n  );\n};\n\nexport default AccountForm;"]},"metadata":{},"sourceType":"module"}