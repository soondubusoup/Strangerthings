{"ast":null,"code":"var _jsxFileName = \"/Users/soondubu/Desktop/Strangerthings/src/Components/NewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst NewPost = ({\n  token\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [location, setLocation] = useState('');\n  const [willDeliver, setWillDeliver] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        fetch(`${baseURL}/posts`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            post: {\n              title,\n              description,\n              price,\n              location,\n              willDeliver\n            }\n          })\n        }).then(response => response.json()).then(result => {}).catch(console.error);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"title\",\n          value: title,\n          onChange: event => setTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"description\",\n          value: description,\n          onChange: event => setDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"price\",\n          value: price,\n          onChange: event => setPrice(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"location\",\n          value: location,\n          onChange: event => setLocation(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"willDeliver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          placeholder: \"no/yes\",\n          value: willDeliver,\n          onChange: event => setWillDeliver(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"no\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewPost, \"9Yz/EIm4whHgtgI7q4MdosibMgU=\");\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/Users/soondubu/Desktop/Strangerthings/src/Components/NewPost.js"],"names":["React","useState","baseURL","NewPost","token","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","event","preventDefault","fetch","method","headers","body","JSON","stringify","post","then","response","json","result","catch","console","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst NewPost = ({token}) => {\n    const [title, setTitle] = useState ('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [location, setLocation] = useState('')\n    const [willDeliver, setWillDeliver] = useState(false)\n\n    return <> \n    <h1>Create Post</h1>\n\n    <form onSubmit={async(event) => {\n        event.preventDefault()\n\n        fetch(`${baseURL}/posts`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                post: {\n                title,\n                description,\n                price,\n                location,\n                willDeliver\n                }\n            })\n            }).then(response => response.json())\n            .then(result => {\n            })\n            \n            .catch(console.error);\n        }}>\n        \n        <fieldset>\n            <label>Title</label>\n            <input type=\"text\" placeholder ='title' value={title} onChange= {(event) => setTitle(event.target.value)}></input>\n        </fieldset>\n        \n        <fieldset>\n            <label>description</label>\n            <input type=\"text\" placeholder ='description' value={description} onChange= {(event) => setDescription(event.target.value)}></input>\n        </fieldset>\n\n        <fieldset>\n        <label>price</label>\n        <input type=\"text\" placeholder ='price' value={price} onChange= {(event) => setPrice(event.target.value)}></input>\n        </fieldset>\n\n        <fieldset>\n            <label>location</label>\n            <input type=\"text\" placeholder ='location' value={location} onChange= {(event) => setLocation(event.target.value)}></input>\n        </fieldset>\n\n        <fieldset>\n            <label>willDeliver</label>\n            <select type=\"text\" placeholder ='no/yes' value={willDeliver} onChange= {(event) => setWillDeliver(event.target.value)}>\n                <option value='false'>no</option>\n                <option value='true'>yes</option>\n            </select>\n        </fieldset>\n         <button type=\"submit\">Post</button>   \n            \n        </form>\n\n        </>\n\n}\n\n\n\n\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}