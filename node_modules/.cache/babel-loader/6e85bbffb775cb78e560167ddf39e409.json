{"ast":null,"code":"var _jsxFileName = \"/Users/soondubu/Desktop/Strangerthings/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SinglePost from './SinglePost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  fetchPosts,\n  posts,\n  setPosts\n}) => {\n  _s();\n\n  // const [filteredPosts, setFilteredPosts] = useState([])\n  const [query, setQuery] = useState('');\n  const [isTitle, setIsTitle] = useState(true);\n\n  const handleFilter = async () => {\n    let filteredPosts;\n    isTitle ? filteredPosts = posts.filter(post => post.title.toLowerCase().includes(query.toLowerCase())) : filteredPosts = posts.filter(post => post.description.toLowerCase().includes(query.toLowerCase()));\n    setPosts(filteredPosts);\n    query === '' && (await fetchPosts());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search-form\",\n    onChange: handleFilter,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"search\",\n      type: \"text\",\n      placeholder: \"FILTER POSTS\",\n      className: \"search-input\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Search, \"8AsGKrhaHcP2Ee7+bIAAzgTGwTg=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/soondubu/Desktop/Strangerthings/src/Components/Search.js"],"names":["React","useState","SinglePost","Search","fetchPosts","posts","setPosts","query","setQuery","isTitle","setIsTitle","handleFilter","filteredPosts","filter","post","title","toLowerCase","includes","description","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAmC;AAAA;;AAC9C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMU,YAAY,GAAG,YAAY;AAC7B,QAAIC,aAAJ;AACAH,IAAAA,OAAO,GACDG,aAAa,GAAGP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAmCV,KAAK,CAACS,WAAN,EAAnC,CAArB,CADf,GAEDJ,aAAa,GAAGP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACI,WAAL,CAAiBF,WAAjB,GAA+BC,QAA/B,CAAyCV,KAAK,CAACS,WAAN,EAAzC,CAArB,CAFtB;AAGAV,IAAAA,QAAQ,CAACM,aAAD,CAAR;AACAL,IAAAA,KAAK,KAAK,EAAV,KAAgB,MAAMH,UAAU,EAAhC;AACH,GAPD;;AASA,sBAAO;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAEO,YAAxC;AAAA,4BACH;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,MAA1B;AAAiC,MAAA,WAAW,EAAC,cAA7C;AAA4D,MAAA,SAAS,EAAC,cAAtE;AAAqF,MAAA,KAAK,EAAEJ,KAA5F;AAAmG,MAAA,QAAQ,EAAGY,CAAD,IAAMX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3H;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAnBD;;GAAMlB,M;;KAAAA,M;AAqBN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport SinglePost from './SinglePost';\n\nconst Search = ({fetchPosts, posts, setPosts}) => {\n    // const [filteredPosts, setFilteredPosts] = useState([])\n    const [query, setQuery] = useState('')\n    const [isTitle, setIsTitle] = useState(true);\n    \n    const handleFilter = async () => {\n        let filteredPosts\n        isTitle \n            ? filteredPosts = posts.filter(post => post.title.toLowerCase().includes( query.toLowerCase() ))\n            : filteredPosts = posts.filter(post => post.description.toLowerCase().includes( query.toLowerCase() ))\n        setPosts(filteredPosts);\n        query === '' && await fetchPosts();\n    }\n\n    return <form className='search-form' onChange={handleFilter}>\n        <input name='search' type='text' placeholder='FILTER POSTS' className='search-input' value={query} onChange={(e)=> setQuery(e.target.value)} />       \n        <button type='submit'className='search-button' >reset</button>\n        <div></div>\n    </form>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}