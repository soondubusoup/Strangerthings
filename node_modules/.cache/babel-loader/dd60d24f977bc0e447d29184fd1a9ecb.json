{"ast":null,"code":"var _jsxFileName = \"/Users/soondubu/Desktop/Strangerthings/src/Components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\nconst AccountForm = ({\n  setToken,\n  setUser\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"This is the \", params.method, \" method\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        const resp = await fetch(`${baseURL}/users/${params.method}`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user: {\n              username,\n              password\n            }\n          })\n        });\n        const respObj = await resp.json();\n        setToken(respObj.data.token);\n\n        if (respObj.data) {\n          const fetchUser = await fetch(`${baseURL}/users/me`, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${respObj.data.token}`\n            }\n          });\n          const result = await fetchUser.json();\n          const data = result;\n\n          if (data.data) {\n            setUser(data.data);\n          }\n\n          history.push('/');\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/account/register\",\n      children: \"Click here to Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"76AYw7VWBgowTi/8uEplI1K/tAU=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/soondubu/Desktop/Strangerthings/src/Components/AccountForm.js"],"names":["React","useState","useParams","useHistory","Link","baseURL","AccountForm","setToken","setUser","username","setUsername","password","setPassword","history","params","method","event","preventDefault","resp","fetch","headers","body","JSON","stringify","user","respObj","json","data","token","fetchUser","result","push","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\nimport { useParams, useHistory } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\n\n\nconst AccountForm = ({setToken, setUser}) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const history = useHistory()\n  const params = useParams();\n  \n\n  return (\n     <>\n      <div>This is the {params.method} method</div>\n      <form onSubmit={async (event) => {\n        event.preventDefault()\n        \n        \n      const resp = await fetch(`${baseURL}/users/${params.method}`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username,\n            password\n          }\n        })\n      })\n      \n      const respObj = await resp.json();\n      \n      setToken(respObj.data.token)\n\n      if(respObj.data) {       \n          const fetchUser = await fetch(`${baseURL}/users/me`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${respObj.data.token}`\n          },\n        })\n        const result = await fetchUser.json();\n        const data=result;\n        if (data.data) {\n          setUser(data.data)\n         \n          \n        }\n          \n      \n    \n        history.push('/')\n      }\n          \n      \n      }}>\n        <input type=\"text\" placeholder=\"username\" value ={username} \n        onChange={(event) => setUsername(event.target.value)}></input>\n        <input type=\"password\" placeholder=\"password\" value ={password} \n        onChange={(event) => setPassword(event.target.value)}></input>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <Link to='/account/register'>Click here to Register</Link>\n    </>\n  );\n};\n\nexport default AccountForm"]},"metadata":{},"sourceType":"module"}