{"ast":null,"code":"var _jsxFileName = \"/Users/soondubu/Desktop/Strangerthings/src/Components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\nimport SinglePost from \"./SinglePost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditPost = ({\n  token,\n  post,\n  setPosts\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [location, setLocation] = useState('');\n  const [willDeliver, setWillDeliver] = useState(false);\n  const history = useHistory();\n  const {\n    postId\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SinglePost, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        fetch(`${baseURL}/posts/${postId}`, {\n          method: \"PATCH\",\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            post: {\n              title,\n              description,\n              price,\n              location,\n              willDeliver\n            }\n          })\n        }).then(response => response.json()).then(result => {}).catch(console.error);\n\n        const fetchPosts = async () => {\n          const resp = await fetch(`${baseURL}/posts`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application.json',\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          const data = await resp.json();\n          console.log(data);\n          setPosts(data.data.posts);\n        };\n\n        fetchPosts();\n        history.push(\"/posts\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"title\",\n          value: title,\n          onChange: event => setTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"description\",\n          value: description,\n          onChange: event => setDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"price\",\n          value: price,\n          onChange: event => setPrice(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"location\",\n          value: location,\n          onChange: event => setLocation(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"willDeliver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          placeholder: \"no/yes\",\n          value: willDeliver,\n          onChange: event => setWillDeliver(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"no\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditPost, \"KvzvlUB+NwKecjReylpJtXBaKWM=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/soondubu/Desktop/Strangerthings/src/Components/EditPost.js"],"names":["React","useState","useHistory","useParams","baseURL","SinglePost","EditPost","token","post","setPosts","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","history","postId","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","result","catch","console","error","fetchPosts","resp","data","log","posts","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { useHistory, useParams } from \"react-router\";\nconst baseURL = \"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT\";\nimport SinglePost from \"./SinglePost\";\n\nconst EditPost = ({token, post, setPosts}) => {\n    const [title, setTitle] = useState ('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [location, setLocation] = useState('')\n    const [willDeliver, setWillDeliver] = useState(false)\n    const history = useHistory()\n    const {postId} = useParams()\n    return <> \n    <h1>Edit Post</h1>\n    <SinglePost post={post} >\n         \n    </SinglePost>\n    <form onSubmit={async(event) => {\n        event.preventDefault()\n\n        fetch(`${baseURL}/posts/${postId}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                post: {\n                title,\n                description,\n                price,\n                location,\n                willDeliver\n                }\n            })\n            }).then(response => response.json())\n            .then (result => { \n            })\n            .catch(console.error);\n            const fetchPosts = async () => {\n                const resp = await fetch(`${baseURL}/posts`,{\n                    method: 'POST',\n                    headers:{\n                        'Content-Type': 'application.json',\n                        'Authorization': `Bearer ${token}`\n                    }\n                });\n                const data = await resp.json();\n                console.log(data)\n                setPosts(data.data.posts);\n\n              };    \n            fetchPosts()\n            history.push(\"/posts\")\n        }}>\n        \n        <fieldset>\n            <label>Title</label>\n            <input type=\"text\" placeholder ='title' value={title} onChange= {(event) => setTitle(event.target.value)}></input>\n        </fieldset>\n        \n        <fieldset>\n            <label>description</label>\n            <input type=\"text\" placeholder ='description' value={description} onChange= {(event) => setDescription(event.target.value)}></input>\n        </fieldset>\n\n        <fieldset>\n        <label>price</label>\n        <input type=\"text\" placeholder ='price' value={price} onChange= {(event) => setPrice(event.target.value)}></input>\n        </fieldset>\n\n        <fieldset>\n            <label>location</label>\n            <input type=\"text\" placeholder ='location' value={location} onChange= {(event) => setLocation(event.target.value)}></input>\n        </fieldset>\n\n        <fieldset>\n            <label>willDeliver</label>\n            <select type=\"text\" placeholder ='no/yes' value={willDeliver} onChange= {(event) => setWillDeliver(event.target.value)}>\n                <option value='false'>no</option>\n                <option value='true'>yes</option>\n            </select>\n        </fieldset>\n         <button type=\"submit\">Post</button>   \n         \n            \n        </form>\n\n        </>\n\n}\n\n\n\n\n\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}